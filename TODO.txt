v5.x
----
- Think about experimental repr of Body
- Get inspiration of examples and debug drawing from here: https://github.com/liabru/matter-js  
- add better example benchmark for threaded solver
- automatic test build of android apk on travis 
- cleanup implementation of autoexample sphinx extension
- pickle: fix shape id 
- make example of good timestep handling
- update most example code to use shape.density or shape.mass instead of 
  body.mass and moment.
- maybe it would be good to use pip install pymunk[docs] or something to distribute docs and examples?
- make running examples with python -m pymunk.examples... somehow. See pybox2d for inspiration    
- make running docs with python -m pymunk.docs... somehow. See pygame for inspiration    
- can autosummary be used? (see stackoverflow answer)
- tests of py2exe/pyinstaller/cx_freeze?
- make example where a container is used for a complex shape such as car: https://stackoverflow.com/questions/55146932/grouping-without-collision-adding-and-removing-multiple-bodies-and-polygons-i/55150431#55150431
- make camera example.. could a offset be sent into the debug draw code.
x update example code to be less dependent on the flipy function for pygame. instead flip the gravity.
- Update docs with collision chapter. ShapeFilter, collision callbacks and such
- use env variables for pymunkoptions, like pygame https://stackoverflow.com/questions/56258942/is-there-an-environment-variable-to-disable-pymunk-chipmunk-from-printing-loadi
- Write in docs about troubleshooting more prominent, and that its good to consider the properties on constraints like max_force
- Add Check that its not allowed to change body of shape added to space
- Make sure there's a check to see that the bodies of a constraint are added to space before constraint is added
x Add code for cpConstraintSetPreSolveFunc/post solver
- Add TKInter util module

v6
--
x make shape.sensor return bool instead of int
x Make add_collision_handler(a,b) and add_collision_handler(b,a) return the 
  same handler. Fixes https://github.com/viblo/pymunk/issues/132 
x make pickle space check pymunk version 
x use black to autoformat code
x fix doc of __init__
x drop support for python 2
x Type annotations

v6+ (all potentially breaking changes)
---
x Remake BB into namedtuple
- Think about split between pymunk.util and pymunk modules
x do we still need pymunk.inf? Yes, for body with normal mass but infinite 
  moment.
x Think about overriding behavior of sensor shapes in segment and point_query 
  vs segment_first and point_query_nearest (one hits sensors the other does not)
- Think about return tuple of doubles instead of Vec2d in autogeometry module.
  Skipping the Vec2d can potentially lead to big saving (2x speedup in one 
  microbench). 
x make default of positive_y_is_up False

before release 6.0.0
x doc of Vec2d specials like __add__
x decide if shapes or constraint is correct, and rename the other



Typing a existing project - learnings
-------------------------------------

mypy
- problems with bugs / missing features in mypy
  - in implementation of Vector class: __add__ vs __radd__ https://github.com/python/mypy/issues/9388
  - in allowing both vec2d and tuple/list: setters cant have different type from getter https://github.com/python/mypy/issues/3004
  - __path__ not supported in packages. https://github.com/python/mypy/issues/1422

- problems with bugs / missing features in pyright

- differences in what is allowed between mypy and pyright/pylance.
  - https://github.com/microsoft/pyright/issues/992
  - The Pyright maintainer is super quick to respond, fix and release fixes for bug reports!
  - Mypy issues feels slower to actually act on issues (But issue tracker is also very fast to 
    respond, and have GvR actively replying to many issues).

pyright
- Strange & unintuitive rules, such as type requirements for __add__ not the same as those of + (pyright) 
  https://github.com/microsoft/pyright/issues/992 


Notes
-----
When freeing an object you do have to be careful that nothing else has a reference to it (dangling pointers). 

Shapes and joints have a reference to the bodies they were attached to, so you have to free them before the 
bodies that they reference. 

Similarly, don't free a shape, joint or body before removing it from a space. 
Unless I'm forgetting something, those are really the only gotchas.
